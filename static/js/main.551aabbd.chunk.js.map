{"version":3,"sources":["pages/app.module.css","actions/events.js","reducers/movie.js","reducers/index.js","store/index.js","api/index.js","actions/index.js","pages/movie-item.js","pages/searchbar.js","pages/header.js","pages/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","movies","searchTerm","fetching","page","totalPages","searchResults","search","term","filter","m","name","RegExp","combineReducers","movie","state","action","type","events","payload","map","x","Store","createStore","reducers","applyMiddleware","promise","thunk","get","pageNo","axios","ACTIONS","Promise","resolve","reject","api","then","resp","parseInt","data","results","resultsPerPage","Math","ceil","console","log","content","e","imgUrl","image","MovieItem","Grid","item","xs","className","classes","grid","title","movieBox","imageBox","style","backgroundImage","SearchBar","props","searchMovies","bind","dispatch","this","actions","search_movies","target","value","container","Input","placeholder","autoFocus","fullWidth","disableUnderline","input","onChange","Component","connect","withStyles","display","color","width","background","padding","Header","showSearch","toggleSearch","setState","onSearch","Fragment","IconButton","buttonBack","Typography","variant","heading","buttonSearch","onClick","searchBar","App","trackScrolling","fetchMovies","document","getElementById","addEventListener","removeEventListener","fetch_movies","scrollHeight","scrollTop","clientHeight","isBottom","items","i","key","_","chunk","j","spacing","group","root","header","onSearchClear","catalog","id","renderMovies","store","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.551aabbd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"app_root__LD5r2\",\"catalog\":\"app_catalog__2_t8T\",\"header\":\"app_header__2pS8E\",\"group\":\"app_group__19ShV\",\"grid\":\"app_grid__30wlT\",\"imageBox\":\"app_imageBox__1HEw3\",\"movieBox\":\"app_movieBox__TsqPm\",\"title\":\"app_title__3EWwZ\",\"heading\":\"app_heading__2pttv\",\"container\":\"app_container__3c5x-\",\"buttonSearch\":\"app_buttonSearch__2oElV\",\"buttonBack\":\"app_buttonBack__nOSAQ\",\"searchBar\":\"app_searchBar__3Fl1q\"};","export default {\n  FETCH_MOVIES: 'FETCH_MOVIES',\n  SEARCH_MOVIES: 'SEARCH_MOVIES',\n};\n","import events from '../actions/events';\n\nconst initialState = {\n  movies: [],\n  searchTerm: '',\n  fetching: false,\n  page: 0,\n  totalPages: null,\n  searchResults: [],\n};\nfunction search(movies, term) {\n  return movies.filter(m => m.name.search(new RegExp(term, 'i')) !== -1);\n}\n\nexport default function reducer(state = initialState, action) {\n  let movies = [];\n  switch (action.type) {\n    case `${events.FETCH_MOVIES}_PENDING`:\n      return {\n        ...state,\n        fetching: true,\n      };\n    case `${events.FETCH_MOVIES}_FULFILLED`:\n      movies = [...state.movies, ...action.payload.movies.map(x => ({\n        ...x,\n      }))];\n      return {\n        ...state,\n        movies,\n        page: action.payload.page,\n        totalPages: action.payload.totalPages,\n        fetching: false,\n        searchResults: search(movies, state.searchTerm),\n      };\n    case `${events.FETCH_MOVIES}_REJECTED`:\n      return {\n        ...state,\n        fetching: null,\n      };\n    case events.SEARCH_MOVIES:\n      return {\n        ...state,\n        searchTerm: action.payload,\n        searchResults: search(state.movies, action.payload),\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport movie from './movie';\n\nexport default combineReducers({\n  movie,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport promise from 'redux-promise-middleware';\nimport thunk from 'redux-thunk';\n// import logger from 'redux-logger';\n\nimport reducers from '../reducers';\n\n\nconst Store = createStore(reducers, applyMiddleware(\n  promise,\n  thunk,\n  // logger,\n));\n\nexport default Store;\n","import axios from 'axios';\n\nconst get = pageNo => axios.get(`/movies-catalog-ts/api/page${pageNo}.json`);\n\nexport default {\n  movies: {\n    get,\n  },\n};\n","import api from '../api';\nimport events from './events';\n\nconst ACTIONS = {};\n\nACTIONS.fetch_movies = pageNo => ({\n  type: events.FETCH_MOVIES,\n  payload: () => new Promise((resolve, reject) => {\n    api.movies.get(pageNo).then((resp) => {\n      const page = parseInt(resp.data.page['page-num-requested'], 10);\n\n      const results = parseInt(resp.data.page['total-content-items'], 10);\n      const resultsPerPage = parseInt(resp.data.page['page-size-requested'], 10);\n\n      const totalPages = Math.ceil(results / resultsPerPage);\n      console.log(totalPages);\n      resolve({\n        movies: resp.data.page['content-items'].content,\n        page,\n        totalPages,\n      });\n    }, e => reject(e));\n  }),\n});\n\nACTIONS.search_movies = term => ({\n  type: events.SEARCH_MOVIES,\n  payload: term,\n});\n\nexport default ACTIONS;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid } from '@material-ui/core';\nimport classes from './app.module.css';\n\n\nconst imgUrl = image => (`/movies-catalog-ts/images/${image}`);\n\nconst MovieItem = ({ name, 'poster-image': image }) => (\n  <Grid item xs={4} className={classes.grid} title={name}>\n    <div className={classes.movieBox}>\n      <div className={classes.imageBox} style={{ backgroundImage: `url(${imgUrl(image)}), url(${imgUrl('poster_missing.png')})` }} />\n      <span className={classes.title}>{name}</span>\n    </div>\n  </Grid>\n);\n\nMovieItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  'poster-image': PropTypes.string.isRequired,\n};\n\nexport default MovieItem;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Input } from '@material-ui/core';\nimport actions from '../actions';\n\nconst styles = () => ({\n  container: {\n    display: 'flex',\n  },\n  input: {\n    color: '#333',\n    width: '100%',\n    background: '#DDD',\n    padding: '4px 10px',\n  },\n});\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.searchMovies = this.searchMovies.bind(this);\n  }\n\n  componentWillUnmount() {\n    const { dispatch } = this.props;\n    dispatch(actions.search_movies(''));\n  }\n\n  searchMovies(e) {\n    const term = e.target.value;\n    const { dispatch } = this.props;\n    dispatch(actions.search_movies(term));\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.container}>\n        <Input placeholder=\"Title search\" autoFocus fullWidth disableUnderline className={classes.input} onChange={this.searchMovies} />\n      </div>\n    );\n  }\n}\n\n\nexport default connect(state => ({ movie: state.movie }))(withStyles(styles)(SearchBar));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Typography, IconButton } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport BackIcon from '@material-ui/icons/KeyboardBackspace';\nimport SearchBar from './searchbar';\nimport classes from './app.module.css';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSearch: false,\n    };\n    this.toggleSearch = this.toggleSearch.bind(this);\n  }\n\n  toggleSearch() {\n    this.setState(state => ({ showSearch: !state.showSearch }));\n  }\n\n  render() {\n    const { onSearch } = this.props;\n    const { showSearch } = this.state;\n    return (\n      <React.Fragment>\n        <div className={classes.container}>\n          <IconButton className={classes.buttonBack}>\n            <BackIcon />\n          </IconButton>\n          <Typography variant=\"h1\" className={classes.heading}>Romantic Comedy</Typography>\n          <IconButton className={classes.buttonSearch} onClick={this.toggleSearch}>\n            <SearchIcon />\n          </IconButton>\n        </div>\n        {showSearch && <SearchBar onSearch={onSearch} className={classes.searchBar} />}\n      </React.Fragment>\n    );\n  }\n}\n\n\nHeader.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n};\n\n\nexport default Header;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Grid } from '@material-ui/core';\nimport _ from 'lodash';\nimport actions from '../actions';\nimport MovieItem from './movie-item';\nimport Header from './header';\nimport classes from './app.module.css';\n\nfunction isBottom(e) {\n  return (e.target.scrollHeight - e.target.scrollTop - 50) < e.target.clientHeight;\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n    this.trackScrolling = this.trackScrolling.bind(this);\n    this.fetchMovies = this.fetchMovies.bind(this);\n  }\n\n  componentDidMount() {\n    const container = document.getElementById('catalog-contatiner');\n    container.addEventListener('scroll', this.trackScrolling);\n    this.fetchMovies();\n  }\n\n  componentWillUnmount() {\n    const container = document.getElementById('catalog-contatiner');\n    container.removeEventListener('scroll', this.trackScrolling);\n  }\n\n  fetchMovies() {\n    const {\n      dispatch, movie,\n    } = this.props;\n    const { page, totalPages, fetching } = movie;\n    if (!fetching && ((totalPages && page < totalPages) || totalPages === null)) {\n      dispatch(actions.fetch_movies(movie.page + 1));\n    } else if (page === totalPages) {\n      const container = document.getElementById('catalog-contatiner');\n      container.removeEventListener('scroll', this.trackScrolling);\n    }\n  }\n\n  trackScrolling(e) {\n    if (isBottom(e)) {\n      this.fetchMovies();\n    }\n  }\n\n  renderMovies() {\n    const { movie } = this.props;\n    const { searchResults } = movie;\n    // eslint-disable-next-line react/no-array-index-key\n    const items = searchResults.map((m, i) => <MovieItem key={i} {...m} />);\n    return _.chunk(items, 3).map((i, j) => (\n      <Grid key={`j`} container spacing={32} className={classes.group}>{i}</Grid>\n    ));\n  }\n\n  render() {\n    return (\n      <Grid container className={classes.root}>\n        <Grid item xs={12} className={classes.header}>\n          <Header onSearch={this.searchMovies} onSearchClear={() => this.searchMovies(null)} />\n        </Grid>\n        <Grid item xs={12} className={classes.catalog} id=\"catalog-contatiner\">\n          {this.renderMovies()}\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nApp.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  movie: PropTypes.object.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default connect(state => ({ movie: state.movie }))(App);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport App from './pages';\n\n\nexport default () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}